<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ochain.provider.wheel.dao.AccountCalculateLogMapper">
  <resultMap id="BaseResultMap" type="com.ochain.provider.wheel.po.AccountCalculateLog">
    <id column="id" jdbcType="BIGINT" property="accountCalculateLogId" />
    <result column="account_calculate_id" jdbcType="INTEGER" property="accountCalculateId" />
    <result column="calculate" jdbcType="INTEGER" property="calculate" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="calculate_type" jdbcType="INTEGER" property="calculateType" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_calculate_id, calculate, content, type, status, calculate_type, balance, 
    source, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.ochain.provider.wheel.po.AccountCalculateLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_calculate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_calculate_log
    where id = #{accountCalculateLogId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account_calculate_log
    where id = #{accountCalculateLogId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ochain.provider.wheel.po.AccountCalculateLogExample">
    delete from account_calculate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ochain.provider.wheel.po.AccountCalculateLog" useGeneratedKeys="true" keyProperty="accountCalculateLogId">
    insert into account_calculate_log (id, account_calculate_id, 
      calculate, content, type, 
      status, calculate_type, balance, 
      source, create_time, update_time
      )
    values (#{accountCalculateLogId,jdbcType=BIGINT}, #{accountCalculateId,jdbcType=INTEGER}, 
      #{calculate,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{calculateType,jdbcType=INTEGER}, #{balance,jdbcType=INTEGER}, 
      #{source,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ochain.provider.wheel.po.AccountCalculateLog" useGeneratedKeys="true" keyProperty="accountCalculateLogId">
    insert into account_calculate_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountCalculateLogId != null">
        id,
      </if>
      <if test="accountCalculateId != null">
        account_calculate_id,
      </if>
      <if test="calculate != null">
        calculate,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="calculateType != null">
        calculate_type,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountCalculateLogId != null">
        #{accountCalculateLogId,jdbcType=BIGINT},
      </if>
      <if test="accountCalculateId != null">
        #{accountCalculateId,jdbcType=INTEGER},
      </if>
      <if test="calculate != null">
        #{calculate,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="calculateType != null">
        #{calculateType,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ochain.provider.wheel.po.AccountCalculateLogExample" resultType="java.lang.Long">
    select count(*) from account_calculate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_calculate_log
    <set>
      <if test="record.accountCalculateLogId != null">
        id = #{record.accountCalculateLogId,jdbcType=BIGINT},
      </if>
      <if test="record.accountCalculateId != null">
        account_calculate_id = #{record.accountCalculateId,jdbcType=INTEGER},
      </if>
      <if test="record.calculate != null">
        calculate = #{record.calculate,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.calculateType != null">
        calculate_type = #{record.calculateType,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_calculate_log
    set id = #{record.accountCalculateLogId,jdbcType=BIGINT},
      account_calculate_id = #{record.accountCalculateId,jdbcType=INTEGER},
      calculate = #{record.calculate,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      calculate_type = #{record.calculateType,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=INTEGER},
      source = #{record.source,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ochain.provider.wheel.po.AccountCalculateLog">
    update account_calculate_log
    <set>
      <if test="accountCalculateId != null">
        account_calculate_id = #{accountCalculateId,jdbcType=INTEGER},
      </if>
      <if test="calculate != null">
        calculate = #{calculate,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="calculateType != null">
        calculate_type = #{calculateType,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{accountCalculateLogId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ochain.provider.wheel.po.AccountCalculateLog">
    update account_calculate_log
    set account_calculate_id = #{accountCalculateId,jdbcType=INTEGER},
      calculate = #{calculate,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      calculate_type = #{calculateType,jdbcType=INTEGER},
      balance = #{balance,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{accountCalculateLogId,jdbcType=BIGINT}
  </update>
</mapper>