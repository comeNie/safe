<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ochain.provider.wheel.dao.AccountMapper">
  <resultMap id="BaseResultMap" type="com.ochain.provider.wheel.po.Account">
    <id column="id" jdbcType="INTEGER" property="accountId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="diamond" jdbcType="DECIMAL" property="diamond" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, diamond, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.ochain.provider.wheel.po.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where id = #{accountId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ochain.provider.wheel.po.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ochain.provider.wheel.po.Account" useGeneratedKeys="true" keyProperty="accountId">
    insert into account (id, user_id, diamond, 
      create_time, update_time)
    values (#{accountId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{diamond,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ochain.provider.wheel.po.Account" useGeneratedKeys="true" keyProperty="accountId">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="diamond != null">
        diamond,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="diamond != null">
        #{diamond,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ochain.provider.wheel.po.AccountExample" resultType="java.lang.Long">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.accountId != null">
        id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.diamond != null">
        diamond = #{record.diamond,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set id = #{record.accountId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      diamond = #{record.diamond,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ochain.provider.wheel.po.Account">
    update account
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="diamond != null">
        diamond = #{diamond,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ochain.provider.wheel.po.Account">
    update account
    set user_id = #{userId,jdbcType=INTEGER},
      diamond = #{diamond,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{accountId,jdbcType=INTEGER}
  </update>
  
  	<!-- 查询账户能量总数  -->
	<select id="selectAccountDiamondSumList" resultType="com.ochain.provider.wheel.vo.account.AccountDiamondVo">
        select sum(t1.diamond) as totalDiamond 
        from account t1, user_info t2
        where t1.user_id = t2.id 
        and t2.status = 1 
        and t2.login_count >0 
    </select>
    
    <!-- 根据账户能量倒序查询账户能量用户列表 -->
    <select id="selectAccountVoListByDiamond" resultType="com.ochain.provider.wheel.vo.account.AccountUserVo">
		select 
      	t1.id as accountId, t1.diamond as diamond, 
      	t2.id as userId, t2.user_account as userAccount 
        from account t1, user_info t2 
        where t1.user_id = t2.id 
        and t1.diamond > 0 
        and t2.status = 1 
        and t2.login_count >0 
        order by t1.diamond desc
    </select>
    
    <!-- 分页查询账户能量用户列表() -->
    <!-- 实体不能通过'' 来判断 -->
    <select id="selectAccountVoListByPage" parameterType="com.ochain.provider.wheel.param.AccountParam" resultType="com.ochain.provider.wheel.vo.account.AccountUserVo">
		select 
      	t1.id as accountId, t1.diamond as diamond, 
      	t2.id as userId, t2.user_account as userAccount 
        from account t1, user_info t2 
        where t1.user_id = t2.id 
        and t1.diamond > 0 
        and t2.status = 1 
        and t2.login_count >0 
        <if test="orderByClause != null and orderByClause != ''">
            order by ${orderByClause}
        </if>
 		<if test="page != null">
      		limit #{page.offset,jdbcType=INTEGER}, #{page.pageSize,jdbcType=INTEGER}
    	</if>
    </select>
    
    <!-- 根据账户能量倒序查询账户总条数 -->
    <select id="selectAccountVoRowsByDiamond" resultType="java.lang.Long">
		select count(t1.id) 
        from account t1, user_info t2 
        where t1.user_id = t2.id 
        and t1.diamond > 0 
        and t2.status = 1 
        and t2.login_count >0 
    </select>
    
</mapper>