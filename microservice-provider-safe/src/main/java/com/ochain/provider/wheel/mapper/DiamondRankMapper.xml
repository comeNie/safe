<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ochain.provider.wheel.dao.DiamondRankMapper" >
  <resultMap id="BaseResultMap" type="com.ochain.provider.wheel.po.DiamondRank" >
    <id column="id" property="diamondRankId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="OTHER" />
    <result column="rank_time" property="rankTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, content, rank_time, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ochain.provider.wheel.po.DiamondRankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from diamond_rank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from diamond_rank
    where id = #{diamondRankId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from diamond_rank
    where id = #{diamondRankId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ochain.provider.wheel.po.DiamondRankExample" >
    delete from diamond_rank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ochain.provider.wheel.po.DiamondRank" useGeneratedKeys="true" keyProperty="diamondRankId">
    insert into diamond_rank (id, content, rank_time, 
      create_time, update_time)
    values (#{diamondRankId,jdbcType=INTEGER}, #{content,jdbcType=OTHER}, #{rankTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ochain.provider.wheel.po.DiamondRank"  useGeneratedKeys="true" keyProperty="diamondRankId">
    insert into diamond_rank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="diamondRankId != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="rankTime != null" >
        rank_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="diamondRankId != null" >
        #{diamondRankId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=OTHER},
      </if>
      <if test="rankTime != null" >
        #{rankTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ochain.provider.wheel.po.DiamondRankExample" resultType="java.lang.Integer" >
    select count(*) from diamond_rank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update diamond_rank
    <set >
      <if test="record.diamondRankId != null" >
        id = #{record.diamondRankId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=OTHER},
      </if>
      <if test="record.rankTime != null" >
        rank_time = #{record.rankTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update diamond_rank
    set id = #{record.diamondRankId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=OTHER},
      rank_time = #{record.rankTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ochain.provider.wheel.po.DiamondRank" >
    update diamond_rank
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=OTHER},
      </if>
      <if test="rankTime != null" >
        rank_time = #{rankTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{diamondRankId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ochain.provider.wheel.po.DiamondRank" >
    update diamond_rank
    set content = #{content,jdbcType=OTHER},
      rank_time = #{rankTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{diamondRankId,jdbcType=INTEGER}
  </update>
  
  	<!-- $只是简单的字符串拼接，不加单引号（'）;#添加字符串默认加单引号（'）  -->
  	<!-- 分页查询能量排名列表  -->
    <select id="selectDiamondRankListByPage" parameterType="com.ochain.provider.wheel.param.DiamondRankParam" resultType="com.ochain.provider.wheel.po.DiamondRank">
		select 
        id as diamondRankId, json_extract(content, ${pageNumStr}) as content,
   		rank_time as rankTime, create_time as createTime, update_time as updateTime
        from diamond_rank 
        where
        rank_time BETWEEN #{rankTimeStartStr,jdbcType=VARCHAR} AND #{rankTimeEndStr,jdbcType=VARCHAR} 
    </select>
    
  	<!-- 不分页查询能量排名列表  -->
    <select id="selectDiamondRankList" parameterType="com.ochain.provider.wheel.param.DiamondRankParam" resultType="com.ochain.provider.wheel.po.DiamondRank">
		select 
        id as diamondRankId, content as content,
   		rank_time as rankTime, create_time as createTime, update_time as updateTime
        from diamond_rank 
        where
        rank_time BETWEEN #{rankTimeStartStr,jdbcType=VARCHAR} AND #{rankTimeEndStr,jdbcType=VARCHAR} 
    </select>
    
  	<!-- 查询能量排名条数  -->
    <select id="selectDiamondRankRows" parameterType="com.ochain.provider.wheel.param.DiamondRankParam" resultType="java.lang.Integer">
		select 
   		JSON_LENGTH(content)
        from diamond_rank 
        where
        rank_time BETWEEN #{rankTimeStartStr,jdbcType=VARCHAR} AND #{rankTimeEndStr,jdbcType=VARCHAR} 
    </select>
   
   <!-- 根据userAccount查询能量排名列表 -->
   	<select id="selectDiamondRankListByUserAccount" parameterType="com.ochain.provider.wheel.param.DiamondRankParam" resultType="com.ochain.provider.wheel.po.DiamondRank">
       	select 
       	id as diamondRankId, JSON_EXTRACT(content, trim(trailing '.userAccount' from JSON_UNQUOTE(json_search(content, 'one', #{userAccount,jdbcType=VARCHAR})))) as content,
  		rank_time as rankTime, create_time as createTime, update_time as updateTime
       	from diamond_rank 
       	where
       	rank_time BETWEEN #{rankTimeStartStr,jdbcType=VARCHAR} AND #{rankTimeEndStr,jdbcType=VARCHAR} 
   	</select>
   
   <!-- 根据userId查询能量排名列表 -->
   	<select id="selectDiamondRankListByUserId" parameterType="com.ochain.provider.wheel.param.DiamondRankParam" resultType="com.ochain.provider.wheel.po.DiamondRank">
       	select 
       	id as diamondRankId, JSON_EXTRACT(content, trim(trailing '.userId' from JSON_UNQUOTE(json_search(content, 'one', #{userId,jdbcType=INTEGER})))) as content,
  		rank_time as rankTime, create_time as createTime, update_time as updateTime
       	from diamond_rank 
       	where
       	rank_time BETWEEN #{rankTimeStartStr,jdbcType=VARCHAR} AND #{rankTimeEndStr,jdbcType=VARCHAR} 
   	</select>
   	
	<!-- 根据id查询能量排名条数 -->
	<select id="selectDiamondRankRowsById" parameterType="com.ochain.provider.wheel.param.DiamondRankParam" resultType="java.lang.Integer">
		select JSON_LENGTH(content) 
		from diamond_rank 
      	where id = #{diamondRankId,jdbcType=INTEGER} 
  	</select>
   	
   	<!-- 修改能量排名 -->
	<insert id="updateDiamondRank" parameterType="com.ochain.provider.wheel.param.DiamondRankParam">
		update diamond_rank 
		set
      	content = JSON_ARRAY_APPEND(content, '$', JSON_OBJECT(${rankStr})) 
      	where id = #{diamondRankId,jdbcType=INTEGER} 
  	</insert>
  	
  	<!-- 根据排名时间修改能量排名 -->
	<insert id="updateDiamondRankByRankTime" parameterType="com.ochain.provider.wheel.param.DiamondRankParam">
		update diamond_rank 
		set
      	content = JSON_ARRAY_APPEND(content, '$', JSON_OBJECT(${rankStr})) 
      	 where rank_time BETWEEN #{rankTimeStartStr,jdbcType=VARCHAR} AND #{rankTimeEndStr,jdbcType=VARCHAR} 
  	</insert>
  	
  	<!-- 根据排名时间删除能量排名 -->
	<delete id="deleteDiamondRankByRankTime" parameterType="com.ochain.provider.wheel.param.DiamondRankParam">
	    delete from diamond_rank
	    where rank_time BETWEEN #{rankTimeStartStr,jdbcType=VARCHAR} AND #{rankTimeEndStr,jdbcType=VARCHAR} 
  	</delete>
   	
</mapper>